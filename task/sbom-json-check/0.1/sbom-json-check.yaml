---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: sbom-json-check
spec:
  description: >-
    Check the syntax of the sbom-cyclonedx.json file which should be found
    in the /root/buildinfo/content_manifests/ directory
  params:
    - name: IMAGE_URL
      description: the fully qualified image name to be verified
      type: string
    - name: IMAGE_DIGEST
      description: image digest
      type: string
  results:
    - description: Test output
      name: HACBS_TEST_OUTPUT
  steps:
  - name: sbom-json-check
    image: quay.io/redhat-appstudio/hacbs-test:latest
    securityContext:
      runAsUser: 0
      capabilities:
        add:
          - SETFCAP
    volumeMounts:
      - mountPath: /shared
        name: shared
    script: |
      #!/usr/bin/env bash
      source /utils.sh

      mkdir /manifests/ && cd /manifests/

      image_with_digest="$(params.IMAGE_URL)@$(params.IMAGE_DIGEST)"

      if ! oc image extract "${image_with_digest}" --path '/root/buildinfo/content_manifests/*:/manifests/'; then
        echo "Failed to extract manifests from image ${image_with_digest}"
      fi

      touch fail_result.txt
      if [ -f "sbom-cyclonedx.json" ]
      then
        result=$(echo -n $(cyclonedx-linux-x64 validate --input-file sbom-cyclonedx.json))
        if [[ ! $result =~ "BOM validated successfully" ]]
        then
          echo "sbom-cyclonedx.json: $result" > fail_result.txt
        fi
      else
        echo "cannot access 'sbom-cyclonedx.json': No such file or directory" > fail_result.txt
      fi

      FAIL_RESULTS="$(cat fail_result.txt)"
      if [[ -z $FAIL_RESULTS ]]
      then
        HACBS_TEST_OUTPUT=$(make_result_json -r "SUCCESS" -s 1)
      else
        echo "Fail to verify sbom-cyclonedx.json for image $(params.IMAGE_URL) with reason: $FAIL_RESULTS"
        HACBS_ERROR_OUTPUT=$(make_result_json -r "FAILURE" -f 1)
      fi

      echo "${HACBS_TEST_OUTPUT:-${HACBS_ERROR_OUTPUT}}" | tee $(results.HACBS_TEST_OUTPUT.path)
  volumes:
  - name: shared
    emptyDir: {}
